syntax = "proto2";

package probe.protobuf;

option (rustproto.carllerche_bytes_for_bytes_all) = true;
option (rustproto.carllerche_bytes_for_string_all) = true;
option optimize_for = SPEED;

message BprmCheckSecurityEventEvent {
  optional string id = 1 [json_name="id"];
  optional string kind = 2 [json_name="kind"];
  optional string category = 3 [json_name="category"];
  optional string action = 4 [json_name="action"];
  optional string field_type = 5 [json_name="type"];
  optional string module = 6 [json_name="module"];
  optional string provider = 7 [json_name="provider"];
  optional uint64 sequence = 8 [json_name="sequence"];
  optional uint64 ingested = 9 [json_name="ingested"];
}
message BprmCheckSecurityEventHostOs {
  optional string field_type = 1 [json_name="type"];
  optional string name = 2 [json_name="name"];
  optional string kernel = 3 [json_name="kernel"];
}
message BprmCheckSecurityEventHost {
  optional string hostname = 1 [json_name="hostname"];
  repeated string ip = 2 [json_name="ip"];
  repeated string mac = 3 [json_name="mac"];
  optional uint64 uptime = 4 [json_name="uptime"];
  optional BprmCheckSecurityEventHostOs os = 5 [json_name="os"];
}
message BprmCheckSecurityEventProcessParent {
  optional uint32 pid = 1 [json_name="pid"];
  optional string entity_id = 2 [json_name="entity_id"];
  optional string name = 3 [json_name="name"];
  optional uint64 args_count = 4 [json_name="args_count"];
  repeated string args = 5 [json_name="args"];
  optional uint32 ppid = 6 [json_name="ppid"];
  optional uint64 start = 7 [json_name="start"];
  optional uint64 thread_id = 8 [json_name="thread.id"];
  optional string executable = 9 [json_name="executable"];
}
message BprmCheckSecurityEventProcess {
  optional uint32 pid = 1 [json_name="pid"];
  optional string entity_id = 2 [json_name="entity_id"];
  optional string name = 3 [json_name="name"];
  optional uint32 ppid = 4 [json_name="ppid"];
  optional string executable = 5 [json_name="executable"];
  optional uint64 args_count = 6 [json_name="args_count"];
  optional uint64 start = 7 [json_name="start"];
  optional uint64 thread_id = 8 [json_name="thread.id"];
  optional string command_line = 9 [json_name="command_line"];
  repeated string args = 10 [json_name="args"];
  optional BprmCheckSecurityEventProcessParent parent = 11 [json_name="parent"];
}
message BprmCheckSecurityEventUserGroup {
  optional string id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
}
message BprmCheckSecurityEventUserEffectiveGroup {
  optional string id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
}
message BprmCheckSecurityEventUserEffective {
  optional string id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
  optional BprmCheckSecurityEventUserEffectiveGroup group = 3 [json_name="group"];
}
message BprmCheckSecurityEventUser {
  optional string id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
  optional BprmCheckSecurityEventUserGroup group = 3 [json_name="group"];
  optional BprmCheckSecurityEventUserEffective effective = 4 [json_name="effective"];
}
message BprmCheckSecurityEvent {
  optional uint64 timestamp = 1 [json_name="@timestamp"];
  optional BprmCheckSecurityEventEvent event = 2 [json_name="event"];
  optional BprmCheckSecurityEventHost host = 3 [json_name="host"];
  optional BprmCheckSecurityEventProcess process = 4 [json_name="process"];
  optional BprmCheckSecurityEventUser user = 5 [json_name="user"];
}
message InodeUnlinkEventEvent {
  optional string id = 1 [json_name="id"];
  optional string kind = 2 [json_name="kind"];
  optional string category = 3 [json_name="category"];
  optional string action = 4 [json_name="action"];
  optional string field_type = 5 [json_name="type"];
  optional string module = 6 [json_name="module"];
  optional string provider = 7 [json_name="provider"];
  optional uint64 sequence = 8 [json_name="sequence"];
  optional uint64 ingested = 9 [json_name="ingested"];
}
message InodeUnlinkEventHostOs {
  optional string field_type = 1 [json_name="type"];
  optional string name = 2 [json_name="name"];
  optional string kernel = 3 [json_name="kernel"];
}
message InodeUnlinkEventHost {
  optional string hostname = 1 [json_name="hostname"];
  repeated string ip = 2 [json_name="ip"];
  repeated string mac = 3 [json_name="mac"];
  optional uint64 uptime = 4 [json_name="uptime"];
  optional InodeUnlinkEventHostOs os = 5 [json_name="os"];
}
message InodeUnlinkEventProcessParent {
  optional uint32 pid = 1 [json_name="pid"];
  optional string entity_id = 2 [json_name="entity_id"];
  optional string name = 3 [json_name="name"];
  optional uint64 args_count = 4 [json_name="args_count"];
  repeated string args = 5 [json_name="args"];
  optional uint32 ppid = 6 [json_name="ppid"];
  optional uint64 start = 7 [json_name="start"];
  optional uint64 thread_id = 8 [json_name="thread.id"];
  optional string executable = 9 [json_name="executable"];
}
message InodeUnlinkEventProcess {
  optional uint32 pid = 1 [json_name="pid"];
  optional string entity_id = 2 [json_name="entity_id"];
  optional string name = 3 [json_name="name"];
  optional uint32 ppid = 4 [json_name="ppid"];
  optional string executable = 5 [json_name="executable"];
  optional uint64 args_count = 6 [json_name="args_count"];
  optional uint64 start = 7 [json_name="start"];
  optional uint64 thread_id = 8 [json_name="thread.id"];
  optional string command_line = 9 [json_name="command_line"];
  repeated string args = 10 [json_name="args"];
  optional InodeUnlinkEventProcessParent parent = 11 [json_name="parent"];
}
message InodeUnlinkEventUserGroup {
  optional string id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
}
message InodeUnlinkEventUserEffectiveGroup {
  optional string id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
}
message InodeUnlinkEventUserEffective {
  optional string id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
  optional InodeUnlinkEventUserEffectiveGroup group = 3 [json_name="group"];
}
message InodeUnlinkEventUser {
  optional string id = 1 [json_name="id"];
  optional string name = 2 [json_name="name"];
  optional InodeUnlinkEventUserGroup group = 3 [json_name="group"];
  optional InodeUnlinkEventUserEffective effective = 4 [json_name="effective"];
}
message InodeUnlinkEventFile {
  optional string name = 1 [json_name="name"];
  optional string directory = 2 [json_name="directory"];
  optional string path = 3 [json_name="path"];
  optional string extension = 4 [json_name="extension"];
  optional string inode = 5 [json_name="inode"];
}
message InodeUnlinkEvent {
  optional uint64 timestamp = 1 [json_name="@timestamp"];
  optional InodeUnlinkEventEvent event = 2 [json_name="event"];
  optional InodeUnlinkEventHost host = 3 [json_name="host"];
  optional InodeUnlinkEventProcess process = 4 [json_name="process"];
  optional InodeUnlinkEventUser user = 5 [json_name="user"];
  optional InodeUnlinkEventFile file = 6 [json_name="file"];
}

message Event {
  enum EventType {
    BPRMCHECKSECURITYEVENT = 0;
    INODEUNLINKEVENT = 1;
  }
  required EventType event_type = 1;
  optional BprmCheckSecurityEvent bprm_check_security_event_t = 2;
  optional InodeUnlinkEvent inode_unlink_event_t = 3;
}